using UnityEngine;

public class #SCRIPTNAME# : StateMachineBehaviour
{
	// Called when a transition starts and the state machine starts to evaluate this state.
	public override void OnStateEnter( Animator animator, AnimatorStateInfo stateInfo, int layerIndex )
	{
	}

	// Called on each Update frame between OnStateEnter and OnStateExit callbacks.
	public override void OnStateUpdate( Animator animator, AnimatorStateInfo stateInfo, int layerIndex )
	{
	}

	// Called when a transition ends and the state machine finishes evaluating this state.
	public override void OnStateExit( Animator animator, AnimatorStateInfo stateInfo, int layerIndex )
	{
	}

	// Called right after Animator.OnAnimatorMove(). Code that processes and affects root motion should be implemented here.
	public override void OnStateMove( Animator animator, AnimatorStateInfo stateInfo, int layerIndex )
	{
	}

	// Called right after Animator.OnAnimatorIK(). Code that sets up animation IK (inverse kinematics) should be implemented here.
	public override void OnStateIK( Animator animator, AnimatorStateInfo stateInfo, int layerIndex )
	{
	}
}